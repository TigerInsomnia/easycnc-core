// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using easycnc_core.Data;

#nullable disable

namespace easycnc_core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("easycnc_core.Areas.System.Models.Dept", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dept_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeptId"));

                    b.Property<string>("DeptCode")
                        .HasColumnType("text")
                        .HasColumnName("dept_code");

                    b.Property<string>("DeptName")
                        .HasColumnType("text")
                        .HasColumnName("dept_name");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.HasKey("DeptId");

                    b.ToTable("dept");

                    b.HasData(
                        new
                        {
                            DeptId = 1,
                            DeptName = "张氏工厂",
                            ParentId = 9999
                        },
                        new
                        {
                            DeptId = 2,
                            DeptName = "技术部",
                            ParentId = 1
                        },
                        new
                        {
                            DeptId = 3,
                            DeptName = "销售部",
                            ParentId = 1
                        },
                        new
                        {
                            DeptId = 4,
                            DeptName = "销售1部",
                            ParentId = 3
                        },
                        new
                        {
                            DeptId = 5,
                            DeptName = "销售2部",
                            ParentId = 3
                        });
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("permission_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PermissionId"));

                    b.Property<string>("PermissionCode")
                        .HasColumnType("text")
                        .HasColumnName("permission_code");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("permission_name");

                    b.HasKey("PermissionId");

                    b.ToTable("permission");

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            PermissionCode = "read",
                            PermissionName = "读"
                        },
                        new
                        {
                            PermissionId = 2,
                            PermissionCode = "write",
                            PermissionName = "写"
                        });
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("post_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PostId"));

                    b.Property<string>("PostCode")
                        .HasColumnType("text")
                        .HasColumnName("post_code");

                    b.Property<string>("PostName")
                        .HasColumnType("text")
                        .HasColumnName("post_name");

                    b.HasKey("PostId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleCode")
                        .HasColumnType("text")
                        .HasColumnName("role_code");

                    b.Property<string>("RoleName")
                        .HasColumnType("text")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId");

                    b.ToTable("role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleCode = "admin",
                            RoleName = "管理员"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleCode = "user",
                            RoleName = "用户"
                        });
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer")
                        .HasColumnName("permission_id");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("role_permission");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 1
                        });
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer")
                        .HasColumnName("address_id");

                    b.Property<int>("DeptId")
                        .HasColumnType("integer")
                        .HasColumnName("dept_id");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Realname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("realname");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("DeptId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AddressId = 1,
                            DeptId = 2,
                            Password = "$2a$10$kPaZzYn4dB0oUHwwOQ6Uuuwg48GBcS/3TbCn/CVMzJD70t.hIBgiy",
                            Realname = "",
                            Username = "zhangsan"
                        },
                        new
                        {
                            UserId = 2,
                            AddressId = 2,
                            DeptId = 3,
                            Password = "$2a$10$kPaZzYn4dB0oUHwwOQ6Uuuwg48GBcS/3TbCn/CVMzJD70t.hIBgiy",
                            Realname = "",
                            Username = "lisi"
                        },
                        new
                        {
                            UserId = 3,
                            AddressId = 3,
                            DeptId = 4,
                            Password = "$2a$10$kPaZzYn4dB0oUHwwOQ6Uuuwg48GBcS/3TbCn/CVMzJD70t.hIBgiy",
                            Realname = "",
                            Username = "wangwu"
                        });
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("user_role");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("easycnc_core.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("address_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("county");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("detail");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("province");

                    b.HasKey("AddressId");

                    b.ToTable("address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "嘉兴市",
                            County = "嘉善县",
                            Detail = "罗星街道",
                            Province = "浙江省"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "嘉兴市",
                            County = "嘉善县",
                            Detail = "罗星街道",
                            Province = "浙江省"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "嘉兴市",
                            County = "嘉善县",
                            Detail = "罗星街道",
                            Province = "浙江省"
                        });
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.RolePermission", b =>
                {
                    b.HasOne("easycnc_core.Areas.System.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("easycnc_core.Areas.System.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.User", b =>
                {
                    b.HasOne("easycnc_core.Models.Address", "Address")
                        .WithOne("User")
                        .HasForeignKey("easycnc_core.Areas.System.Models.User", "AddressId");

                    b.HasOne("easycnc_core.Areas.System.Models.Dept", "Dept")
                        .WithMany("Users")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.UserRole", b =>
                {
                    b.HasOne("easycnc_core.Areas.System.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("easycnc_core.Areas.System.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("easycnc_core.Areas.System.Models.Dept", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("easycnc_core.Models.Address", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
